@import './animations';

@mixin theme($theme: light) {
	@if $theme == light {
		color: var(--text-color-light);
		background-color: var(--color-light-primary);
	} @else {
		color: var(--text-color-dark);
		background-color: var(--color-dark-primary);
	}
}

@mixin scrollbar-ui-primary() {
	&::-webkit-scrollbar {
		width: 0.8rem;
	}

	&::-webkit-scrollbar-track {
		border-radius: 1rem;
	}

	&::-webkit-scrollbar-thumb {
		border-radius: 1rem;
		background: linear-gradient(to bottom, orangered, purple, orange);
		box-shadow: var(--box-shadow-light);
	}
}

@mixin scrollbar-ui-secondary() {
	&::-webkit-scrollbar {
		width: 0.8rem;
	}

	&::-webkit-scrollbar-track {
		border-radius: 1rem;
	}

	&::-webkit-scrollbar-thumb {
		border-radius: 1rem;
		background: var(--color-tertiary);
		box-shadow: var(--box-shadow-light);
	}
}

@mixin general-screen-style {
	padding: var(--spacing-around-screen);
	overflow-y: scroll;
	overflow-x: hidden;
	@include scrollbar-ui-secondary;
}

@mixin primary_link {
	display: inline-flex;
	align-items: center;
	gap: 0.5rem;
	color: currentColor;
	border-bottom: 1px solid transparent;
	transition: all 0.3s ease;

	& svg {
		margin-top: -1px;
	}

	&:hover {
		border-bottom: 1px solid currentColor;
		transform: translateY(-4px);
	}
}

@mixin caption {
	min-width: 100%;
	max-height: 50%;
	background-color: var(--transparent-secondary);
	color: var(--color-white);
	position: absolute;
	bottom: 0;
	text-align: center;
	line-height: 2;
	font-size: 2rem;
	padding: 5rem;
	overflow-y: scroll;
	animation: moveInFromButtom 0.4s ease-out 1 backwards;
	@include scrollbar-ui-secondary;

	@include respond(phone) {
		padding: 2.5rem;
	}
}

// MEDIA QUERY MANAGER
@mixin respond($breakpoint) {
	@if $breakpoint == big-screen {
		@media only screen and (min-width: 112.5em) {
			@content;
		}
	} @else if $breakpoint == tab-land {
		@media only screen and (max-width: 75em) {
			@content;
		}
	} @else if $breakpoint == tab-port {
		@media only screen and (max-width: 56.25em) {
			@content;
		}
	} @else if $breakpoint == phone {
		@media only screen and (max-width: 37.5em) {
			@content;
		}
	}
}
